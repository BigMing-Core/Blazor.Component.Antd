@inherits LuanNiao.Blazor.Core.LNBCBase
@using LuanNiao.Blazor.Component.Antd.Button

@{ RenderFragment data =@<input placeholder="@Placeholder"
                                type="text" class="@InputClass"
                                value="@DefaultValue"
                                disabled="@(Disabled?"true":null)"
                                id="@($"LNInput_{IdentityKey}")" />;
}


@{
    RenderFragment affixData =@<span style="@((!UseBtnMod?CStyle:null))" class="@ClassName">
        @if (Prefix != null)
        {
            <span class="ant-input-prefix">@Prefix</span>
        }
        @data

        @if (!UseBtnMod)
        {
            <span class="ant-input-suffix">
                <LuanNiao.Blazor.Component.Antd.Icons.SearchOutlined OnClick="OnIconClicked" />
            </span>
        }

    </span>;
}





@if (UseBtnMod)
{
    <span class="ant-input-search ant-input-search-enter-button  ant-input-group-wrapper"
          style="@((UseBtnMod?CStyle:null))">
        <span class="ant-input-wrapper ant-input-group">
            @if (AddonBefore != null)
            {
                <span class="ant-input-group-addon">@AddonBefore</span>}
            @if (Suffix != null || Prefix != null)
            {
                @affixData
            }
            else
            {
                @data
            }


            <span class="ant-input-group-addon">
                @if (AddonAfter != null)
                {
                    @AddonAfter
                }
                else
                {
                    <LNButton Type="LNButton.BType.Primary" Disabled="@Disabled" OnClickCallback="(_)=> { this.OnIconClicked(); }">
                        <LuanNiao.Blazor.Component.Antd.Icons.SearchOutlined />
                    </LNButton>
                }

            </span>
        </span>
    </span>
}
else
{
    @affixData
}



